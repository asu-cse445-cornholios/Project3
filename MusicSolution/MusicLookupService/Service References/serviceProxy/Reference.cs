//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.261
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MusicLookupService.serviceProxy {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="serviceProxy.IMusicService")]
    public interface IMusicService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMusicService/findArtists", ReplyAction="http://tempuri.org/IMusicService/findArtistsResponse")]
        MusicInfo.SearchTypes.ArtistResult[] findArtists(MusicInfo.SearchTypes.ArtistSearch search);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMusicService/findReleaseGroups", ReplyAction="http://tempuri.org/IMusicService/findReleaseGroupsResponse")]
        MusicInfo.SearchTypes.ReleaseGroupResult[] findReleaseGroups(MusicInfo.SearchTypes.ReleaseGroupSearch search);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMusicService/findReleases", ReplyAction="http://tempuri.org/IMusicService/findReleasesResponse")]
        MusicInfo.SearchTypes.ReleaseResult[] findReleases(MusicInfo.SearchTypes.ReleaseSearch search);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMusicService/findRecordings", ReplyAction="http://tempuri.org/IMusicService/findRecordingsResponse")]
        MusicInfo.SearchTypes.RecordingResult[] findRecordings(MusicInfo.SearchTypes.RecordingSearch search);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMusicService/findLabels", ReplyAction="http://tempuri.org/IMusicService/findLabelsResponse")]
        MusicInfo.SearchTypes.LabelResult[] findLabels(MusicInfo.SearchTypes.LabelSearch search);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMusicService/findWorks", ReplyAction="http://tempuri.org/IMusicService/findWorksResponse")]
        MusicInfo.SearchTypes.WorkResult[] findWorks(MusicInfo.SearchTypes.WorkSearch search);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMusicServiceChannel : MusicLookupService.serviceProxy.IMusicService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MusicServiceClient : System.ServiceModel.ClientBase<MusicLookupService.serviceProxy.IMusicService>, MusicLookupService.serviceProxy.IMusicService {
        
        public MusicServiceClient() {
        }
        
        public MusicServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MusicServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MusicServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MusicServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MusicInfo.SearchTypes.ArtistResult[] findArtists(MusicInfo.SearchTypes.ArtistSearch search) {
            return base.Channel.findArtists(search);
        }
        
        public MusicInfo.SearchTypes.ReleaseGroupResult[] findReleaseGroups(MusicInfo.SearchTypes.ReleaseGroupSearch search) {
            return base.Channel.findReleaseGroups(search);
        }
        
        public MusicInfo.SearchTypes.ReleaseResult[] findReleases(MusicInfo.SearchTypes.ReleaseSearch search) {
            return base.Channel.findReleases(search);
        }
        
        public MusicInfo.SearchTypes.RecordingResult[] findRecordings(MusicInfo.SearchTypes.RecordingSearch search) {
            return base.Channel.findRecordings(search);
        }
        
        public MusicInfo.SearchTypes.LabelResult[] findLabels(MusicInfo.SearchTypes.LabelSearch search) {
            return base.Channel.findLabels(search);
        }
        
        public MusicInfo.SearchTypes.WorkResult[] findWorks(MusicInfo.SearchTypes.WorkSearch search) {
            return base.Channel.findWorks(search);
        }
    }
}
